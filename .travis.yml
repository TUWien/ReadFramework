language: c++
sudo: required
dist: trusty

os:
- linux

compiler:
- gcc
- clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - lcov

before_script:

 # Linux dependencies
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-add-repository -y ppa:beineri/opt-qt551-trusty; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-add-repository -y ppa:sfiel/opencv-read; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -y --no-install-recommends
  debhelper cdbs libopencv-dev libopencv-stitching-dev libopencv-imgcodecs-dev libopencv-flann-dev
  libopencv-features2d-dev libopencv-calib3d-dev libopencv-hdf-dev libopencv-reg-dev
  libopencv-shape-dev libopencv-xobjdetect-dev libopencv-xfeatures2d-dev libopencv-ximgproc-dev
  libopencv-highgui-dev cmake qt55tools qt55svg qt55base libtbb-dev libwebp-dev libbz2-dev
  libv4l-dev; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install --yes doxygen graphviz; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then CMAKE_ARGS="-DCMAKE_PREFIX_PATH=/opt/qt55/bin/ -DCMAKE_BUILD_TYPE=Debug"; fi

- mkdir build
- cd build

script:
- cmake $CMAKE_ARGS ../.
- make -j8
- make test

after_success:
# Creating report
- cd ${TRAVIS_BUILD_DIR}
- lcov --directory . --capture --output-file coverage.info # capture coverage info
- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
- lcov --list coverage.info #debug info
# upload report to Codecov
- bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
